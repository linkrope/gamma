// declarations/applications: a reduced example

Table = | id ';' Table.

DeclAppl <+ Table>:
    <, Table>
        { <- Table, + Table1>
            'DECL' id <id>
            NotAlreadyDeclared <id, Table>
            <id ';' Table, Table1>
        | <- Table, + Table1>
            'APPL' id <id>
            Declared <id, Table>
            <Table, Table1>
        } <- Table, + Table>.

letter = 'a' | 'b'.
id* = letter | id letter.

letter:
    <+ 'a': letter> 'a'
  | <+ 'b': letter> 'b'.

id *<+ id>:
    letter <letter>
    <letter, id>
        { <- id, + id1>
            letter <letter>
            <id letter, id1>
        } <- id, + id>.

// helper predicate for better error messages
NotAlreadyDeclared <-id, -Table>:
    Find <id, Table, 'FALSE'>.

// helper predicate for better error messages
Declared <-id, -Table>:
    Find <id, Table, 'TRUE'>.

Bool = 'TRUE' | 'FALSE'.

Find <- id, - : Table, + 'FALSE': Bool>: .
Find <- id, - id ';' Table: Table, + 'TRUE': Bool>: .
Find <- id, - !id ';' Table: Table, + Bool>:
    Find <id, Table, Bool>.
